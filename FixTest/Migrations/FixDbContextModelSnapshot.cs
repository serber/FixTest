// <auto-generated />
using FixTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FixTest.Migrations
{
    [DbContext(typeof(FixDbContext))]
    partial class FixDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FixTest.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("LOGIN")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("FixTest.Entities.WebSite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<long>("CheckInterval")
                        .HasColumnName("CHECK_INTERVAL");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnName("IS_AVAILABLE");

                    b.Property<DateTimeOffset?>("LastCheckedAt")
                        .HasColumnName("LAST_CHECKED_AT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("URL")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("WEB_SITE");
                });
#pragma warning restore 612, 618
        }
    }
}
